{
  "version": 3,
  "sources": ["../../preact/src/constants.js", "../../preact/src/util.js", "../../preact/src/options.js", "../../preact/src/create-element.js", "../../preact/src/component.js", "../../preact/src/create-context.js", "../../preact/src/diff/children.js", "../../preact/src/diff/props.js", "../../preact/src/diff/index.js", "../../preact/src/render.js", "../../preact/src/clone-element.js", "../../preact/src/diff/catch-error.js", "../../preact/hooks/src/index.js"],
  "sourcesContent": ["/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 16;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 17;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {preact.ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor == undefined;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tparentDom = component._parentDom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {Component} a\n * @param {Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR, INSERT_VNODE, MATCHED } from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\tnewParentVNode._nextDom = oldDom;\n\tconstructNewChildrenArray(newParentVNode, renderResult, oldChildren);\n\toldDom = newParentVNode._nextDom;\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, null, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == null && newDom != null) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (\n\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\tchildVNode._nextDom !== undefined\n\t\t) {\n\t\t\t// Since Fragments or components that return Fragment like VNodes can\n\t\t\t// contain multiple DOM nodes as the same level, continue the diff from\n\t\t\t// the sibling of last DOM child of this child VNode\n\t\t\toldDom = childVNode._nextDom;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because it\n\t\t// is only used by `diffChildren` to determine where to resume the diff\n\t\t// after diffing Components and Fragments. Once we store it the nextDOM\n\t\t// local var, we can clean up the property. Also prevents us hanging on to\n\t\t// DOM nodes that may have been unmounted.\n\t\tchildVNode._nextDom = undefined;\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\t// TODO: With new child diffing algo, consider alt ways to diff Fragments.\n\t// Such as dropping oldDom and moving fragments in place\n\t//\n\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t// _nextDom property to the nextSibling of its last child DOM node.\n\t//\n\t// `oldDom` contains the correct value here because if the last child\n\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t// node's nextSibling.\n\tnewParentVNode._nextDom = oldDom;\n\tnewParentVNode._dom = firstChildDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(newParentVNode, renderResult, oldChildren) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tconst newChildrenLength = renderResult.length;\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode.constructor === undefined && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Handle unmounting null placeholders, i.e. VNode => null in unkeyed children\n\t\tif (childVNode == null) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode && oldVNode.key == null && oldVNode._dom) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode, false);\n\n\t\t\t\t// Explicitly nullify this position in oldChildren instead of just\n\t\t\t\t// setting `_match=true` to prevent other routines (e.g.\n\t\t\t\t// `findMatchingIndex` or `getDomSibling`) from thinking VNodes or DOM\n\t\t\t\t// nodes in this position are still available to be used in diffing when\n\t\t\t\t// they have actually already been unmounted. For example, by only\n\t\t\t\t// setting `_match=true` here, the unmounting loop later would attempt\n\t\t\t\t// to unmount this VNode again seeing `_match==true`.  Further,\n\t\t\t\t// getDomSibling doesn't know about _match and so would incorrectly\n\t\t\t\t// assume DOM nodes in this subtree are mounted and usable.\n\t\t\t\toldChildren[i] = null;\n\t\t\t\tremainingOldChildren--;\n\t\t\t}\n\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\tconst skewedIndex = i + skew;\n\t\tconst matchingIndex = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t);\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tchildVNode._index = matchingIndex;\n\n\t\toldVNode = null;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == null || oldVNode._original === null;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\tskew--;\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex !== skewedIndex) {\n\t\t\tif (matchingIndex === skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else if (matchingIndex > skewedIndex) {\n\t\t\t\tif (remainingOldChildren > newChildrenLength - skewedIndex) {\n\t\t\t\t\tskew += matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\t// ### Change from keyed: I think this was missing from the algo...\n\t\t\t\t\tskew--;\n\t\t\t\t}\n\t\t\t} else if (matchingIndex < skewedIndex) {\n\t\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\t\tskew = matchingIndex - skewedIndex;\n\t\t\t\t} else {\n\t\t\t\t\tskew = 0;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tskew = 0;\n\t\t\t}\n\n\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t// match the new skew index (i + new skew)\n\t\t\tif (matchingIndex !== i + skew) {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != null && (oldVNode._flags & MATCHED) === 0) {\n\t\t\t\tif (oldVNode._dom == newParentVNode._nextDom) {\n\t\t\t\t\tnewParentVNode._nextDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || null);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\treturn oldDom && oldDom.nextSibling;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet x = skewedIndex - 1;\n\tlet y = skewedIndex + 1;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\tlet shouldSearch =\n\t\tremainingOldChildren >\n\t\t(oldVNode != null && (oldVNode._flags & MATCHED) === 0 ? 1 : 0);\n\n\tif (\n\t\toldVNode === null ||\n\t\t(oldVNode && key == oldVNode.key && type === oldVNode.type)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) === 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture =\n\t\t\tname !== (name = name.replace(/(PointerCapture)$|Capture$/, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = Date.now();\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname !== 'rowSpan' &&\n\t\t\tname !== 'colSpan' &&\n\t\t\tname !== 'role' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] === '-')) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {PreactEvent} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tconst eventHandler = this._listeners[e.type + false];\n\t/**\n\t * This trick is inspired by Vue https://github.com/vuejs/core/blob/main/packages/runtime-dom/src/modules/events.ts#L90-L101\n\t * when the dom performs an event it leaves micro-ticks in between bubbling up which means that an event can trigger on a newly\n\t * created DOM-node while the event bubbles up, this can cause quirky behavior as seen in https://github.com/preactjs/preact/issues/3927\n\t */\n\tif (!e._dispatched) {\n\t\t// When an event has no _dispatched we know this is the first event-target in the chain\n\t\t// so we set the initial dispatched time.\n\t\te._dispatched = Date.now();\n\t\t// When the _dispatched is smaller than the time when the targetted event handler was attached\n\t\t// we know we have bubbled up to an element that was added during patching the dom.\n\t} else if (e._dispatched <= eventHandler._attached) {\n\t\treturn;\n\t}\n\treturn eventHandler(options.event ? options.event(e) : e);\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {PreactEvent} e The event object from the browser\n * @private\n */\nfunction eventProxyCapture(e) {\n\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n}\n", "import {\n\tEMPTY_OBJ,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tRESET_MODE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\t((c.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original === oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = null;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t: MODE_HYDRATE;\n\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t\t// ^ could possibly be simplified to:\n\t\t\t\t// excessDomChildren.length = 0;\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == null &&\n\t\tnewVNode._original === oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\tnewVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\troot._nextDom = undefined;\n\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value === !!nodeType &&\n\t\t\t\t(nodeType ? value.localName === nodeType : value.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS('http://www.w3.org/2000/svg', nodeType);\n\t\t} else {\n\t\t\tdom = document.createElement(nodeType, newProps.is && newProps);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != null) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (i !== 'key' && !(i in newProps)) {\n\t\t\t\tsetProperty(dom, i, null, value, isSvg);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\ti !== 'key' &&\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], isSvg);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (\n\t\t\t\tinputValue !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType === 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], false);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== undefined && checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any>} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to render into\n * @param {PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {ComponentChild} vnode The virtual node to render\n * @param {PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === undefined && defaultProps !== undefined) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {VNode} [oldVNode]\n * @param {ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {Component} */\n\tlet component,\n\t\t/** @type {ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentIndex = 0;\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tlet prevScu = currentComponent.shouldComponentUpdate;\n\t\t\tconst prevCWU = currentComponent.componentWillUpdate;\n\n\t\t\t// If we're dealing with a forced update `shouldComponentUpdate` will\n\t\t\t// not be called. But we use that to update the hook values, so we\n\t\t\t// need to call it.\n\t\t\tcurrentComponent.componentWillUpdate = function (p, s, c) {\n\t\t\t\tif (this._force) {\n\t\t\t\t\tlet tmp = prevScu;\n\t\t\t\t\t// Clear to avoid other sCU hooks from being called\n\t\t\t\t\tprevScu = undefined;\n\t\t\t\t\tupdateHookState(p, s, c);\n\t\t\t\t\tprevScu = tmp;\n\t\t\t\t}\n\n\t\t\t\tif (prevCWU) prevCWU.call(this, p, s, c);\n\t\t\t};\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\t/**\n\t\t\t *\n\t\t\t * @type {import('./internal').Component[\"shouldComponentUpdate\"]}\n\t\t\t */\n\t\t\t// @ts-ignore - We don't use TS to downtranspile\n\t\t\t// eslint-disable-next-line no-inner-declarations\n\t\t\tfunction updateHookState(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t}\n\n\t\t\tcurrentComponent.shouldComponentUpdate = updateHookState;\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n"],
  "mappings": ";;;;;;AACaA;;;;;;;;;;;;;;;ACUN,SAASC,EAAOC,IAAKC,IAAAA;AAE3B,WAASC,MAAKD;AAAOD,IAAAA,GAAIE,EAAAA,IAAKD,GAAMC,EAAAA;AACpC,SAA6BF;AAC7B;AAAA,SAQeG,EAAWC,IAAAA;AAC1B,MAAIC,KAAaD,GAAKC;AAClBA,EAAAA,MAAYA,GAAWC,YAAYF,EAAAA;AACvC;AEZM,SAASG,EAAcC,IAAMP,IAAOQ,IAAAA;AAC1C,MACCC,IACAC,IACAT,IAHGU,KAAkB,CAAA;AAItB,OAAKV,MAAKD;AACA,aAALC,KAAYQ,KAAMT,GAAMC,EAAAA,IACd,SAALA,KAAYS,KAAMV,GAAMC,EAAAA,IAC5BU,GAAgBV,EAAAA,IAAKD,GAAMC,EAAAA;AAUjC,MAPIW,UAAUC,SAAS,MACtBF,GAAgBH,WACfI,UAAUC,SAAS,IAAIC,EAAMC,KAAKH,WAAW,CAAA,IAAKJ,KAKjC,cAAA,OAARD,MAA2C,QAArBA,GAAKS;AACrC,SAAKf,MAAKM,GAAKS;AAAAA,iBACVL,GAAgBV,EAAAA,MACnBU,GAAgBV,EAAAA,IAAKM,GAAKS,aAAaf,EAAAA;AAK1C,SAAOgB,EAAYV,IAAMI,IAAiBF,IAAKC,IAAK,IAAA;AACpD;AAceO,SAAAA,EAAYV,IAAMP,IAAOS,IAAKC,IAAKQ,IAAAA;AAIlD,MAAMC,KAAQ,EACbZ,MAAAA,IACAP,OAAAA,IACAS,KAAAA,IACAC,KAAAA,IACAU,KAAW,MACXC,IAAS,MACTC,KAAQ,GACRC,KAAM,MAKNC,KAAAA,QACAC,KAAY,MACZC,aAAAA,QACAC,KAAuB,QAAZT,KAAAA,EAAqBU,IAAUV,IAC1CW,KAAAA,IACAC,KAAQ,EAAA;AAMT,SAFgB,QAAZZ,MAAqC,QAAjBa,EAAQZ,SAAeY,EAAQZ,MAAMA,EAAAA,GAEtDA;AACP;AAAA,SAEea,IAAAA;AACf,SAAO,EAAEC,SAAS,KAAA;AAClB;AAEeC,SAAAA,EAASlC,IAAAA;AACxB,SAAOA,GAAMQ;AACb;AC/Ee2B,SAAAA,EAAcnC,IAAOoC,IAAAA;AACpCC,OAAKrC,QAAQA,IACbqC,KAAKD,UAAUA;AACf;AA0EM,SAASE,EAAcnB,IAAOoB,IAAAA;AACpC,MAAkB,QAAdA;AAEH,WAAOpB,GAAAE,KACJiB,EAAcnB,GAAeA,IAAAA,GAAAA,MAAe,CAAA,IAC5C;AAIJ,WADIqB,IACGD,KAAapB,GAAAC,IAAgBP,QAAQ0B;AAG3C,QAAe,SAFfC,KAAUrB,GAAAC,IAAgBmB,EAAAA,MAEa,QAAhBC,GAAAjB;AAItB,aAAOiB,GACPjB;AAQF,SAA4B,cAAA,OAAdJ,GAAMZ,OAAqB+B,EAAcnB,EAAAA,IAAS;AAChE;AA2CD,SAASsB,EAAwBtB,IAAAA;AAAjC,MAGWlB,IACJyC;AAHN,MAA+B,SAA1BvB,KAAQA,GAAHE,OAAiD,QAApBF,GAAKM,KAAqB;AAEhE,SADAN,GAAKI,MAAQJ,GAAKM,IAAYkB,OAAO,MAC5B1C,KAAI,GAAGA,KAAIkB,GAAKC,IAAWP,QAAQZ;AAE3C,UAAa,SADTyC,KAAQvB,GAAAC,IAAgBnB,EAAAA,MACO,QAAdyC,GAAAnB,KAAoB;AACxCJ,QAAAA,GAAKI,MAAQJ,GAAKM,IAAYkB,OAAOD,GAArCnB;AACA;MACA;AAGF,WAAOkB,EAAwBtB,EAAAA;EAC/B;AACD;AAAA,SA4BeyB,EAAcC,IAAAA;AAAAA,GAAAA,CAE1BA,GAADrB,QACCqB,GAAArB,MAAAA,SACDsB,EAAcC,KAAKF,EAAAA,KAAAA,CAClBG,EAAAA,SACFC,MAAiBlB,EAAQmB,wBAEzBD,IAAelB,EAAQmB,sBACNC,GAAOH,CAAAA;AAEzB;AASD,SAASA,IAAAA;AAAT,MACKH,IAMEO,IAzGkBC,IAQjBC,IAPHC,IACHC,IACAC,IACAC,IACAC;AAkGD,OAHAb,EAAcc,KAAKC,CAAAA,GAGXhB,KAAIC,EAAcgB,MAAAA;AACrBjB,IAAAA,GAAAA,QACCO,KAAoBN,EAAcjC,QAjGjCyC,KAAAA,QANNE,MADGD,MADoBF,KA0GNR,IAzGNlB,KAAZJ,KAGCmC,KAAc,CAAA,GACdC,KAAW,CAAA,IAFXF,KAAYJ,GAFbU,UAOOT,KAAWxD,EAAO,CAAD,GAAKyD,EAAAA,GACpB5B,MAAa4B,GAAQ5B,MAAa,GACtCI,EAAQZ,SAAOY,EAAQZ,MAAMmC,EAAAA,GAEjCU,EACCP,IACAH,IACAC,IACAF,GAJGY,KAAAA,WAKHR,GAAUS,iBJ1Ie,KI2IzBX,GAAQzB,MAAyB,CAAC0B,EAAAA,IAAU,MAC5CE,IACU,QAAVF,KAAiBlB,EAAciB,EAAAA,IAAYC,IAAAA,CAAAA,EJ7IlB,KI8ItBD,GAAAzB,MACH6B,EAAAA,GAGDL,GAAAjC,GAAAD,IAA2BkC,GAA3BzB,GAAAA,IAA8CyB,IAC9Ca,EAAWT,IAAaJ,IAAUK,EAAAA,GAE9BL,GAAQ/B,OAASiC,MACpBf,EAAwBa,EAAAA,IA8EpBR,EAAcjC,SAASuC,MAI1BN,EAAcc,KAAKC,CAAAA;AAItBb,IAAAA,MAAyB;AACzB;AElNeoB,SAAAA,EACfX,IACAY,IACAC,IACAC,IACAC,IACAC,IACAC,IACAhB,IACAF,IACAmB,IACAhB,IAAAA;AAXeS,MAaXnE,IAEHsD,IAEAqB,IAEAC,IAEAC,IAKGC,KAAeR,MAAkBA,GAAnBnD,OAAgD4D,GAE9DC,KAAoBZ,GAAaxD;AAMrC,OAJAyD,GAAc9C,MAAYgC,IAC1B0B,EAA0BZ,IAAgBD,IAAcU,EAAAA,GACxDvB,KAASc,GAAAA,KAEJrE,KAAI,GAAGA,KAAIgF,IAAmBhF;AAInB,aAHf2E,KAAaN,GAAclD,IAAWnB,EAAAA,MAIhB,aAAA,OAAd2E,MACc,cAAA,OAAdA,OAQPrB,KAAAA,OADGqB,GAAAA,MACQO,IAEAJ,GAAYH,GAAD/C,GAAAA,KAAuBsD,GAI9CP,GAAU/C,MAAU5B,IAGpB+D,EACCP,IACAmB,IACArB,IACAiB,IACAC,IACAC,IACAhB,IACAF,IACAmB,IACAhB,EAAAA,GAIDkB,KAASD,GAATrD,KACIqD,GAAWlE,OAAO6C,GAAS7C,OAAOkE,GAAWlE,QAC5C6C,GAAS7C,OACZ0E,EAAS7B,GAAS7C,KAAK,MAAMkE,EAAAA,GAE9BjB,GAASZ,KACR6B,GAAWlE,KACXkE,GAAUnD,OAAeoD,IACzBD,EAAAA,IAImB,QAAjBE,MAAmC,QAAVD,OAC5BC,KAAgBD,KN3GS,QM+GzBD,GAAU9C,OACVyB,GAAQnC,QAAewD,GAAvBxD,MAEAoC,KAAS6B,EAAOT,IAAYpB,IAAQC,EAAAA,IAEV,cAAA,OAAnBmB,GAAWrE,QAAAA,WAClBqE,GAAApD,MAKAgC,KAASoB,GACTpD,MAAUqD,OACVrB,KAASqB,GAAOS,cAQjBV,GAAUpD,MAAAA,QAGVoD,GAAU9C,OAAAA;AAaXwC,EAAAA,GAAA9C,MAA0BgC,IAC1Bc,GAAA/C,MAAsBuD;AACtB;AAOD,SAASI,EAA0BZ,IAAgBD,IAAcU,IAAAA;AAAjE,MAEK9E,IAEA2E,IAEArB,IA2FGgC,IACAC,IA1FDP,KAAoBZ,GAAaxD,QACnC4E,KAAoBV,GAAYlE,QACnC6E,KAAuBD,IAEpBE,KAAO;AAGX,OADArB,GAAAlD,MAA2B,CAAA,GACtBnB,KAAI,GAAGA,KAAIgF,IAAmBhF;AAsDhB,aA5CjB2E,KAAaN,GAAclD,IAAWnB,EAAAA,IAJxB,SAHf2E,KAAaP,GAAapE,EAAAA,MAIJ,aAAA,OAAd2E,MACc,cAAA,OAAdA,KAEoC,OAMtB,YAAA,OAAdA,MACc,YAAA,OAAdA,MAEc,YAAA,OAAdA,MACPA,GAAWlD,eAAekE,SAEiB3E,EAC1C,MACA2D,IACA,MACA,MACAA,EAAAA,IAESiB,EAAQjB,EAAAA,IACyB3D,EAC1CiB,GACA,EAAE1B,UAAUoE,GAAAA,GACZ,MACA,MACA,IAAA,IAAA,WAESA,GAAWlD,eAA6BkD,GAAAA,MAAoB,IAK3B3D,EAC1C2D,GAAWrE,MACXqE,GAAW5E,OACX4E,GAAWnE,KACXmE,GAAWlE,MAAMkE,GAAWlE,MAAM,MAClCkE,GAEDjD,GAAAA,IAC2CiD,OA6B5CA,GAAAA,KAAqBN,IACrBM,GAAAA,MAAoBN,GAAAhD,MAAwB,GAGtCkE,KAAgBM,EACrBlB,IACAG,IAHKQ,KAActF,KAAI0F,IAKvBD,EAAAA,GAMDd,GAAA/C,MAAoB2D,IAEpBjC,KAAW,MAAA,OACPiC,OAEHE,OADAnC,KAAWwB,GAAYS,EAAAA,OAGtBjC,GAAQzB,ON9QW,UMqRU,QAAZyB,MAA2C,SAAvBA,GAAAA,OAAAA,MAGlCiC,MACHG,MAI6B,cAAA,OAAnBf,GAAWrE,SACrBqE,GAAA9C,ONhSwB,UMkSf0D,OAAkBD,OACxBC,OAAkBD,KAAc,IACnCI,OACUH,KAAgBD,KACtBG,KAAuBT,KAAoBM,KAC9CI,MAAQH,KAAgBD,KAGxBI,OAIAA,KAFSH,KAAgBD,MACtBC,MAAiBD,KAAc,IAC3BC,KAAgBD,KAKjB,GAKJC,OAAkBvF,KAAI0F,OACzBf,GAAA9C,ONzTwB,YMmOzByB,KAAWwB,GAAY9E,EAAAA,MACS,QAAhBsD,GAAS9C,OAAe8C,GAAxChC,QACKgC,GAAAhC,OAAiB+C,GAAjB9C,QACH8C,GAAA9C,MAA0Bc,EAAciB,EAAAA,IAGzCwC,EAAQxC,IAAUA,IAAAA,KAAU,GAW5BwB,GAAY9E,EAAAA,IAAK,MACjByF;AA6EH,MAAIA;AACH,SAAKzF,KAAI,GAAGA,KAAIwF,IAAmBxF;AAElB,eADhBsD,KAAWwB,GAAY9E,EAAAA,MACiC,MNnUpC,SMmUKsD,GAAQzB,SAC5ByB,GAAAA,OAAiBe,GAArB9C,QACC8C,GAAc9C,MAAYc,EAAciB,EAAAA,IAGzCwC,EAAQxC,IAAUA,EAAAA;AAIrB;AAQD,SAAS8B,EAAOW,IAAaxC,IAAQC,IAAAA;AAArC,MAIMjD,IACKP;AAFV,MAA+B,cAAA,OAApB+F,GAAYzF,MAAoB;AAE1C,SADIC,KAAWwF,GAAH5E,KACHnB,KAAI,GAAGO,MAAYP,KAAIO,GAASK,QAAQZ;AAC5CO,MAAAA,GAASP,EAAAA,MAKZO,GAASP,EAAAA,EAAToB,KAAsB2E,IACtBxC,KAAS6B,EAAO7E,GAASP,EAAAA,GAAIuD,IAAQC,EAAAA;AAIvC,WAAOD;EACP;AAKD,SALWwC,GAAWzE,OAASiC,OAC9BC,GAAUwC,aAAaD,GAAvBzE,KAAyCiC,MAAU,IAAA,GACnDA,KAASwC,GACTzE,MAEMiC,MAAUA,GAAO8B;AACxB;AAQM,SAASY,EAAa1F,IAAU2F,IAAAA;AAUtC,SATAA,KAAMA,MAAO,CAAA,GACG,QAAZ3F,MAAuC,aAAA,OAAZA,OACpBqF,EAAQrF,EAAAA,IAClBA,GAAS4F,KAAK,SAAA1D,IAAAA;AACbwD,MAAaxD,IAAOyD,EAAAA;EACpB,CAAA,IAEDA,GAAIpD,KAAKvC,EAAAA,IAEH2F;AACP;AASD,SAASL,EACRlB,IACAG,IACAQ,IACAG,IAAAA;AAJD,MAMOjF,KAAMmE,GAAWnE,KACjBF,KAAOqE,GAAWrE,MACpB8F,KAAId,KAAc,GAClBe,KAAIf,KAAc,GAClBhC,KAAWwB,GAAYQ,EAAAA;AAc3B,MACc,SAAbhC,MACCA,MAAY9C,MAAO8C,GAAS9C,OAAOF,OAASgD,GAAShD;AAEtD,WAAOgF;AAAAA,MAPPG,MACa,QAAZnC,MAAoD,MN7ZhC,SM6ZCA,GAAAA,OAAmC,IAAI;AAQ7D,WAAO8C,MAAK,KAAKC,KAAIvB,GAAYlE,UAAQ;AACxC,UAAIwF,MAAK,GAAG;AAEX,aADA9C,KAAWwB,GAAYsB,EAAAA,MAGU,MN1ad,SM0ajB9C,GAAAzB,QACDrB,MAAO8C,GAAS9C,OAChBF,OAASgD,GAAShD;AAElB,iBAAO8F;AAERA,QAAAA;MACA;AAED,UAAIC,KAAIvB,GAAYlE,QAAQ;AAE3B,aADA0C,KAAWwB,GAAYuB,EAAAA,MAGU,MNvbd,SMubjB/C,GAAAzB,QACDrB,MAAO8C,GAAS9C,OAChBF,OAASgD,GAAShD;AAElB,iBAAO+F;AAERA,QAAAA;MACA;IACD;AAGF,SAAA;AACA;ACvcD,SAASC,EAASC,IAAO/F,IAAKgG,IAAAA;AACd,UAAXhG,GAAI,CAAA,IACP+F,GAAME,YAAYjG,IAAc,QAATgG,KAAgB,KAAKA,EAAAA,IAE5CD,GAAM/F,EAAAA,IADa,QAATgG,KACG,KACa,YAAA,OAATA,MAAqBE,EAAmBC,KAAKnG,EAAAA,IACjDgG,KAEAA,KAAQ;AAEtB;AAUM,SAASC,EAAYG,IAAKC,IAAML,IAAOM,IAAUtC,IAAAA;AAAjD,MACFuC;AAEJC;AAAG,QAAa,YAATH;AACN,UAAoB,YAAA,OAATL;AACVI,QAAAA,GAAIL,MAAMU,UAAUT;WACd;AAKN,YAJuB,YAAA,OAAZM,OACVF,GAAIL,MAAMU,UAAUH,KAAW,KAG5BA;AACH,eAAKD,MAAQC;AACNN,YAAAA,MAASK,MAAQL,MACtBF,EAASM,GAAIL,OAAOM,IAAM,EAAA;AAK7B,YAAIL;AACH,eAAKK,MAAQL;AACPM,YAAAA,MAAYN,GAAMK,EAAAA,MAAUC,GAASD,EAAAA,KACzCP,EAASM,GAAIL,OAAOM,IAAML,GAAMK,EAAAA,CAAAA;MAInC;aAGmB,QAAZA,GAAK,CAAA,KAA0B,QAAZA,GAAK,CAAA;AAChCE,MAAAA,KACCF,QAAUA,KAAOA,GAAKK,QAAQ,8BAA8B,IAAA,IAG9BL,KAA3BA,GAAKM,YAAAA,KAAiBP,KAAYC,GAAKM,YAAAA,EAActG,MAAM,CAAA,IACnDgG,GAAKhG,MAAM,CAAA,GAElB+F,GAALQ,MAAqBR,GAAGQ,IAAc,CAAA,IACtCR,GAAGQ,EAAYP,KAAOE,EAAAA,IAAcP,IAEhCA,KACEM,KAKJN,GAAMa,IAAYP,GAASO,KAJ3Bb,GAAMa,IAAYC,KAAKC,IAAAA,GAEvBX,GAAIY,iBAAiBX,IADLE,KAAaU,IAAoBC,GACbX,EAAAA,KAMrCH,GAAIe,oBAAoBd,IADRE,KAAaU,IAAoBC,GACVX,EAAAA;SAElC;AACN,UAAIvC;AAIHqC,QAAAA,KAAOA,GAAKK,QAAQ,eAAe,GAAA,EAAKA,QAAQ,UAAU,GAAA;eAEjD,YAATL,MACS,aAATA,MACS,WAATA,MACS,WAATA,MACS,WAATA,MAGS,eAATA,MACS,eAATA,MACS,cAATA,MACS,cAATA,MACS,WAATA,MACAA,MAAQD;AAER,YAAA;AACCA,UAAAA,GAAIC,EAAAA,IAAiB,QAATL,KAAgB,KAAKA;AAEjC,gBAAMQ;QACK,SAAHY,IAAAA;QAAG;AAUO,oBAAA,OAATpB,OAES,QAATA,MAAAA,UAAkBA,MAA+B,QAAZK,GAAK,CAAA,IAGpDD,GAAIiB,gBAAgBhB,EAAAA,IAFpBD,GAAIkB,aAAajB,IAAML,EAAAA;IAIxB;AACD;AAOD,SAASkB,EAAWE,IAAAA;AACnB,MAAMG,KAAe3F,KAAAgF,EAAgBQ,GAAEtH,OAAAA,KAAO;AAM9C,MAAKsH,GAAEI,GAAAA;AAMA,QAAIJ,GAAEI,KAAeD,GAAaV;AACxC;EAAA;AAJAO,IAAAA,GAAEI,IAAcV,KAAKC,IAAAA;AAMtB,SAAOQ,GAAajG,EAAQmG,QAAQnG,EAAQmG,MAAML,EAAAA,IAAKA,EAAAA;AACvD;AAOD,SAASH,EAAkBG,IAAAA;AAC1B,SAAOxF,KAAAgF,EAAgBQ,GAAEtH,OAAAA,IAAO,EAAMwB,EAAQmG,QAAQnG,EAAQmG,MAAML,EAAAA,IAAKA,EAAAA;AACzE;ACxHM,SAAS7D,EACfP,IACAH,IACAC,IACAiB,IACAC,IACAC,IACAhB,IACAF,IACAmB,IACAhB,IAAAA;AAVM,MAaFwE,IAkBEtF,IAAGuF,IAAOC,IAAUC,IAAUC,IAAUC,IACxCC,IAKAC,IACAC,IAuGO1I,IA4BP2I,IACHC,IASS5I,IA6BNoE,IAlMLyE,KAAUxF,GAAS/C;AAIpB,MAAA,WAAI+C,GAAS5B;AAA2B,WAAA;AR9CX,QQiDzB6B,GAAAA,QACHoB,KAAAA,CAAAA,ERpD0B,KQoDTpB,GAAQzB,MAEzB4C,KAAoB,CADpBlB,KAASF,GAAA/B,MAAgBgC,GAAhBhC,GAAAA,KAIL4G,KAAMpG,EAAXT,QAA2B6G,GAAI7E,EAAAA;AAE/ByF;AAAO,QAAsB,cAAA,OAAXD;AACjB,UAAA;AAgEC,YA9DIL,KAAWnF,GAAStD,OAKpB0I,MADJP,KAAMW,GAAQE,gBACQxE,GAAc2D,GAApC1G,GAAAA,GACIkH,KAAmBR,KACpBO,KACCA,GAAS1I,MAAMyG,QACf0B,GAFO9G,KAGRmD,IAGCjB,GAAJ9B,MAEC+G,MADA3F,KAAIS,GAAA7B,MAAsB8B,GAAtB9B,KACwBJ,KAAwBwB,GACpDoG,OAEI,eAAeH,MAAWA,GAAQI,UAAUC,SAE/C7F,GAAA7B,MAAsBoB,KAAI,IAAIiG,GAAQL,IAAUE,EAAAA,KAGhDrF,GAAQ7B,MAAcoB,KAAI,IAAIV,EAC7BsG,IACAE,EAAAA,GAED9F,GAAEnB,cAAcoH,IAChBjG,GAAEsG,SAASC,IAERV,MAAUA,GAASW,IAAIxG,EAAAA,GAE3BA,GAAE7C,QAAQyI,IACL5F,GAAEyG,UAAOzG,GAAEyG,QAAQ,CAAA,IACxBzG,GAAET,UAAUuG,IACZ9F,GAAAoB,MAAmBO,IACnB4D,KAAQvF,GAAArB,MAAAA,MACRqB,GAAC0G,MAAoB,CAAA,GACrB1G,GAAC2G,MAAmB,CAAA,IAID,QAAhB3G,GAAA4G,QACH5G,GAAA4G,MAAe5G,GAAEyG,QAGsB,QAApCR,GAAQY,6BACP7G,GAAC4G,OAAe5G,GAAEyG,UACrBzG,GAAC4G,MAAc3J,EAAO,CAAD,GAAK+C,GAAL4G,GAAAA,IAGtB3J,EACC+C,GACAiG,KAAAA,GAAQY,yBAAyBjB,IAAU5F,GAAAA,GAAAA,CAAAA,IAI7CwF,KAAWxF,GAAE7C,OACbsI,KAAWzF,GAAEyG,OACbzG,GAAAlB,MAAW2B,IAGP8E;AAEkC,kBAApCU,GAAQY,4BACgB,QAAxB7G,GAAE8G,sBAEF9G,GAAE8G,mBAAAA,GAGwB,QAAvB9G,GAAE+G,qBACL/G,GAAAA,IAAmBE,KAAKF,GAAE+G,iBAAAA;aAErB;AASN,cAPqC,QAApCd,GAAQY,4BACRjB,OAAaJ,MACkB,QAA/BxF,GAAEgH,6BAEFhH,GAAEgH,0BAA0BpB,IAAUE,EAAAA,GAAAA,CAIrC9F,GACCA,QAA2B,QAA3BA,GAAEiH,yBAAAA,UACHjH,GAAEiH,sBACDrB,IACA5F,GAFD4G,KAGCd,EAAAA,KAEDrF,GAAQ3B,QAAe4B,GAPxB5B,MAQC;AAkBD,iBAhBI2B,GAAQ3B,QAAe4B,GAA3B5B,QAKCkB,GAAE7C,QAAQyI,IACV5F,GAAEyG,QAAQzG,GAAV4G,KACA5G,GAACrB,MAAAA,QAGF8B,GAAAA,MAAgBC,GAChBD,KAAAA,GAAAlC,MAAqBmC,GAArBnC,KACAkC,GAAAlC,IAAmB2I,QAAQ,SAAA5I,IAAAA;AACtBA,cAAAA,OAAOA,GAAAE,KAAgBiC;YAC3B,CAAA,GAEQrD,KAAI,GAAGA,KAAI4C,GAAA2G,IAAkB3I,QAAQZ;AAC7C4C,cAAAA,GAAA0G,IAAmBxG,KAAKF,GAAC2G,IAAiBvJ,EAAAA,CAAAA;AAE3C4C,YAAAA,GAAA2G,MAAoB,CAAA,GAEhB3G,GAAC0G,IAAkB1I,UACtB6C,GAAYX,KAAKF,EAAAA;AAGlB,kBAAMkG;UACN;AAE4B,kBAAzBlG,GAAEmH,uBACLnH,GAAEmH,oBAAoBvB,IAAU5F,GAAAA,KAAc8F,EAAAA,GAGnB,QAAxB9F,GAAEoH,sBACLpH,GAAA0G,IAAmBxG,KAAK,WAAA;AACvBF,YAAAA,GAAEoH,mBAAmB5B,IAAUC,IAAUC,EAAAA;UACzC,CAAA;QAEF;AASD,YAPA1F,GAAET,UAAUuG,IACZ9F,GAAE7C,QAAQyI,IACV5F,GAAAkB,MAAeN,IACfZ,GAACtB,MAAAA,OAEGqH,KAAa7G,EAAHmI,KACbrB,KAAQ,GACL,eAAeC,MAAWA,GAAQI,UAAUC,QAAQ;AAQvD,eAPAtG,GAAEyG,QAAQzG,GAAV4G,KACA5G,GAACrB,MAAAA,OAEGoH,MAAYA,GAAWtF,EAAAA,GAE3B6E,KAAMtF,GAAEsG,OAAOtG,GAAE7C,OAAO6C,GAAEyG,OAAOzG,GAAET,OAAAA,GAE1BnC,KAAI,GAAGA,KAAI4C,GAAA2G,IAAkB3I,QAAQZ;AAC7C4C,YAAAA,GAAC0G,IAAkBxG,KAAKF,GAAC2G,IAAiBvJ,EAAAA,CAAAA;AAE3C4C,UAAAA,GAAA2G,MAAoB,CAAA;QACpB;AACA,aAAA;AACC3G,YAAAA,GAAArB,MAAAA,OACIoH,MAAYA,GAAWtF,EAAAA,GAE3B6E,KAAMtF,GAAEsG,OAAOtG,GAAE7C,OAAO6C,GAAEyG,OAAOzG,GAAET,OAAAA,GAGnCS,GAAEyG,QAAQzG,GAAV4G;UAAAA,SACQ5G,GAACrB,OAAAA,EAAaqH,KAAQ;AAIhChG,QAAAA,GAAEyG,QAAQzG,GAAV4G,KAEyB,QAArB5G,GAAEsH,oBACL3F,KAAgB1E,EAAOA,EAAO,CAAD,GAAK0E,EAAAA,GAAgB3B,GAAEsH,gBAAAA,CAAAA,IAGhD/B,MAAsC,QAA7BvF,GAAEuH,4BACf7B,KAAW1F,GAAEuH,wBAAwB/B,IAAUC,EAAAA,IAOhDlE,EACCX,IACAoC,EAJGxB,KADI,QAAP8D,MAAeA,GAAI5H,SAAS2B,KAAuB,QAAXiG,GAAI1H,MACL0H,GAAInI,MAAMQ,WAAW2H,EAAAA,IAIpC9D,KAAe,CAACA,EAAAA,GACxCf,IACAC,IACAiB,IACAC,IACAC,IACAhB,IACAF,IACAmB,IACAhB,EAAAA,GAGDd,GAAEF,OAAOW,GAAT/B,KAGA+B,GAAQxB,OAAAA,MAEJe,GAAC0G,IAAkB1I,UACtB6C,GAAYX,KAAKF,EAAAA,GAGd2F,OACH3F,GAACoG,MAAiBpG,GAAAxB,KAAyB;MAkB5C,SAhBQwG,IAAAA;AACRvE,QAAAA,GAAQ3B,MAAa,MAEjBgD,MAAoC,QAArBD,MAClBpB,GAAQ/B,MAAQiC,IAChBF,GAAAxB,OAAmB6C,KAChB9E,MRhRqB,IQkRxB6E,GAAkBA,GAAkB2F,QAAQ7G,EAAAA,CAAAA,IAAW,SAIvDF,GAAQ/B,MAAQgC,GAAAA,KAChBD,GAAQlC,MAAamC,GACrBnC,MACDW,EAAOR,IAAasG,IAAGvE,IAAUC,EAAAA;MACjC;;AAEoB,cAArBmB,MACApB,GAAQ3B,QAAe4B,GAFjB5B,OAIN2B,GAAAlC,MAAqBmC,GACrBD,KAAAA,GAAA/B,MAAgBgC,GAAhBhC,OAEA+B,GAAQ/B,MAAQ+I,EACf/G,GACAD,KAAAA,IACAC,IACAiB,IACAC,IACAC,IACAhB,IACAiB,IACAhB,EAAAA;AAAAA,GAIGwE,KAAMpG,EAAQwI,WAASpC,GAAI7E,EAAAA;AAChC;AAOM,SAASa,EAAWT,IAAa8G,IAAM7G,IAAAA;AAC7C6G,EAAAA,GAAAhJ,MAAAA;AAEA,WAASvB,KAAI,GAAGA,KAAI0D,GAAS9C,QAAQZ;AACpCmF,MAASzB,GAAS1D,EAAAA,GAAI0D,GAAAA,EAAW1D,EAAAA,GAAI0D,GAAAA,EAAW1D,EAAAA,CAAAA;AAG7C8B,IAAJN,OAAqBM,EAAAN,IAAgB+I,IAAM9G,EAAAA,GAE3CA,GAAY0C,KAAK,SAAAvD,IAAAA;AAChB,QAAA;AAECa,MAAAA,KAAcb,GAAd0G,KACA1G,GAAC0G,MAAoB,CAAA,GACrB7F,GAAY0C,KAAK,SAAAqE,IAAAA;AAEhBA,QAAAA,GAAG1J,KAAK8B,EAAAA;MACR,CAAA;IAGD,SAFQgF,IAAAA;AACR9F,QAAOR,IAAasG,IAAGhF,GAAvBlB,GAAAA;IACA;EACD,CAAA;AACD;AAiBD,SAAS2I,EACRzD,IACAvD,IACAC,IACAiB,IACAC,IACAC,IACAhB,IACAiB,IACAhB,IAAAA;AATD,MAeK1D,IAEAyK,IAEAC,IAEAC,IACAnE,IACAoE,IACAC,IAbAzC,KAAW9E,GAASvD,OACpByI,KAAWnF,GAAStD,OACpB+K,KAAkCzH,GAAS/C;AAgB/C,MAFiB,UAAbwK,OAAoBtG,KAAAA,OAEC,QAArBC;AACH,SAAKzE,KAAI,GAAGA,KAAIyE,GAAkB7D,QAAQZ;AAMzC,WALAwG,KAAQ/B,GAAkBzE,EAAAA,MAOzB,kBAAkBwG,MAAAA,CAAAA,CAAYsE,OAC7BA,KAAWtE,GAAMuE,cAAcD,KAA8B,MAAnBtE,GAAMsE,WAChD;AACDlE,QAAAA,KAAMJ,IACN/B,GAAkBzE,EAAAA,IAAK;AACvB;MACA;;AAIH,MAAW,QAAP4G,IAAa;AAChB,QAAiB,SAAbkE;AACH,aAAOE,SAASC,eAAezC,EAAAA;AAI/B5B,IAAAA,KADGpC,KACGwG,SAASE,gBAAgB,8BAA8BJ,EAAAA,IAEvDE,SAAS3K,cAAcyK,IAAUtC,GAAS2C,MAAM3C,EAAAA,GAIvD/D,KAAoB,MAGpBC,KAAAA;EACA;AAED,MAAiB,SAAboG;AAEC1C,IAAAA,OAAaI,MAAc9D,MAAekC,GAAIwE,SAAS5C,OAC1D5B,GAAIwE,OAAO5C;OAEN;AASN,QAPA/D,KAAoBA,MAAqB5D,EAAMC,KAAK8F,GAAIyE,UAAAA,GAExDjD,KAAW9E,GAASvD,SAASmF,GAAAA,CAKxBR,MAAoC,QAArBD;AAEnB,WADA2D,KAAW,CAAA,GACNpI,KAAI,GAAGA,KAAI4G,GAAI0E,WAAW1K,QAAQZ;AAEtCoI,QAAAA,IADA5B,KAAQI,GAAI0E,WAAWtL,EAAAA,GACR6G,IAAAA,IAAQL,GAAMA;AAI/B,SAAKxG,MAAKoI;AACT5B,MAAAA,KAAQ4B,GAASpI,EAAAA,GACR,cAALA,OACY,6BAALA,KACV0K,KAAUlE,KACM,UAANxG,MAAiBA,MAAKwI,MAChC/B,EAAYG,IAAK5G,IAAG,MAAMwG,IAAOhC,EAAAA;AAMnC,SAAKxE,MAAKwI;AACThC,MAAAA,KAAQgC,GAASxI,EAAAA,GACR,cAALA,KACH2K,KAAcnE,KACC,6BAALxG,KACVyK,KAAUjE,KACK,WAALxG,KACV4K,KAAapE,KACE,aAALxG,KACV6K,KAAUrE,KAEJ,UAANxG,MACE0E,MAA+B,cAAA,OAAT8B,MACxB4B,GAASpI,EAAAA,MAAOwG,MAEhBC,EAAYG,IAAK5G,IAAGwG,IAAO4B,GAASpI,EAAAA,GAAIwE,EAAAA;AAK1C,QAAIiG;AAGD/F,MAAAA,MACCgG,OACAD,GAAAc,WAAmBb,GAAnBa,UACAd,GAAOc,WAAY3E,GAAI4E,eAEzB5E,GAAI4E,YAAYf,GAAhBc,SAGDlI,GAAAlC,MAAqB,CAAA;aAEjBuJ,OAAS9D,GAAI4E,YAAY,KAE7BrH,EACCyC,IACAhB,EAAQ+E,EAAAA,IAAeA,KAAc,CAACA,EAAAA,GACtCtH,IACAC,IACAiB,IACAC,MAAsB,oBAAbsG,IACTrG,IACAhB,IACAgB,KACGA,GAAkB,CAAA,IAClBnB,GAAAA,OAAsBjB,EAAciB,IAAU,CAAA,GACjDoB,IACAhB,EAAAA,GAIwB,QAArBe;AACH,WAAKzE,KAAIyE,GAAkB7D,QAAQZ;AACN,gBAAxByE,GAAkBzE,EAAAA,KAAYC,EAAWwE,GAAkBzE,EAAAA,CAAAA;AAM7D0E,IAAAA,OACJ1E,KAAI,SAAA,WAEH4K,OAKCA,OAAehE,GAAI5G,EAAAA,KACL,eAAb8K,MAAAA,CAA4BF,MAIf,aAAbE,MAAyBF,OAAexC,GAASpI,EAAAA,MAEnDyG,EAAYG,IAAK5G,IAAG4K,IAAYxC,GAASpI,EAAAA,GAAAA,KAAI,GAG9CA,KAAI,WAAA,WACA6K,MAAyBA,OAAYjE,GAAI5G,EAAAA,KAC5CyG,EAAYG,IAAK5G,IAAG6K,IAASzC,GAASpI,EAAAA,GAAAA,KAAI;EAG5C;AAED,SAAO4G;AACP;AAQM,SAASzB,EAAS1E,IAAK+F,IAAOtF,IAAAA;AACpC,MAAA;AACmB,kBAAA,OAAPT,KAAmBA,GAAI+F,EAAAA,IAC7B/F,GAAIuB,UAAUwE;EAGnB,SAFQoB,IAAAA;AACR9F,MAAAR,IAAoBsG,IAAG1G,EAAAA;EACvB;AACD;AASe4E,SAAAA,EAAQ5E,IAAO6E,IAAa0F,IAAAA;AAA5B3F,MACX4F,IAuBM1L;AAdV,MARI8B,EAAQgE,WAAShE,EAAQgE,QAAQ5E,EAAAA,IAEhCwK,KAAIxK,GAAMT,SACTiL,GAAE1J,WAAW0J,GAAE1J,YAAYd,GAAdI,OACjB6D,EAASuG,IAAG,MAAM3F,EAAAA,IAIU,SAAzB2F,KAAIxK,GAAHM,MAA8B;AACnC,QAAIkK,GAAEC;AACL,UAAA;AACCD,QAAAA,GAAEC,qBAAAA;MAGF,SAFQ/D,IAAAA;AACR9F,UAAAR,IAAoBsG,IAAG7B,EAAAA;MACvB;AAGF2F,IAAAA,GAAEhJ,OAAOgJ,GAAC5H,MAAc,MACxB5C,GAAKM,MAAAA;EACL;AAED,MAAKkK,KAAIxK,GAAHC;AACL,SAASnB,KAAI,GAAGA,KAAI0L,GAAE9K,QAAQZ;AACzB0L,MAAAA,GAAE1L,EAAAA,KACL8F,EACC4F,GAAE1L,EAAAA,GACF+F,IACA0F,MAAoC,cAAA,OAAfvK,GAAMZ,IAAAA;AAM1BmL,EAAAA,MAA4B,QAAdvK,GAAKI,OACvBrB,EAAWiB,GACXI,GAAAA,GAIDJ,GAAKE,KAAWF,GAAAI,MAAaJ,GAAKK,MAAAA;AAClC;AAGD,SAAS4H,EAASpJ,IAAOsJ,IAAOlH,IAAAA;AAC/B,SAAOC,KAAKX,YAAY1B,IAAOoC,EAAAA;AAC/B;ACnlBe+G,SAAAA,EAAOhI,IAAOsC,IAAWoI,IAAAA;AAAzB1C,MAMXxE,IAOApB,IAQAG,IACHC;AArBG5B,IAAeA,MAAAA,EAAAV,GAAcF,IAAOsC,EAAAA,GAYpCF,MAPAoB,KAAoC,cAAA,OAAfkH,MAQtB,OACCA,MAAeA,GAAJzK,OAA8BqC,GAAAA,KAMzCC,KAAc,CAAA,GACjBC,KAAW,CAAA,GACZK,EACCP,IAPDtC,MAAAA,CAAWwD,MAAekH,MAAgBpI,IACzCnD,MAAAA,EAAc4B,GAAU,MAAM,CAACf,EAAAA,CAAAA,GAU/BoC,MAAY4B,GACZA,GAAAA,WACA1B,GAAUS,iBAAAA,CACTS,MAAekH,KACb,CAACA,EAAAA,IACDtI,KACA,OACAE,GAAUqI,aACVhL,EAAMC,KAAK0C,GAAU6H,UAAAA,IACrB,MACH5H,IAAAA,CACCiB,MAAekH,KACbA,KACAtI,KACAA,GACAE,MAAAA,GAAUqI,YACbnH,IACAhB,EAAAA,GAIDQ,EAAWT,IAAavC,IAAOwC,EAAAA;AAC/B;AAOM,SAASoI,EAAQ5K,IAAOsC,IAAAA;AAC9B0F,IAAOhI,IAAOsC,IAAWsI,CAAAA;AACzB;AAAA,SC5DeC,EAAa7K,IAAOnB,IAAOQ,IAAAA;AAAAA,MAEzCC,IACAC,IACAT,IAEGe,IALAL,KAAkBb,EAAO,CAAD,GAAKqB,GAAMnB,KAAAA;AAWvC,OAAKC,MAJDkB,GAAMZ,QAAQY,GAAMZ,KAAKS,iBAC5BA,KAAeG,GAAMZ,KAAKS,eAGjBhB;AACA,aAALC,KAAYQ,KAAMT,GAAMC,EAAAA,IACd,SAALA,KAAYS,KAAMV,GAAMC,EAAAA,IAEhCU,GAAgBV,EAAAA,IAAAA,WADRD,GAAMC,EAAAA,KAAAA,WAAoBe,KACbA,GAAaf,EAAAA,IAEbD,GAAMC,EAAAA;AAS7B,SALIW,UAAUC,SAAS,MACtBF,GAAgBH,WACfI,UAAUC,SAAS,IAAIC,EAAMC,KAAKH,WAAW,CAAA,IAAKJ,KAG7CS,EACNE,GAAMZ,MACNI,IACAF,MAAOU,GAAMV,KACbC,MAAOS,GAAMT,KACb,IAAA;AAED;AL1CeuL,SAAAA,EAAcC,IAAcC,IAAAA;AAG3C,MAAM/J,KAAU,EACfX,KAHD0K,KAAY,SAASlM,KAIpBoB,IAAe6K,IAEfE,UAJe,SAINpM,IAAOqM,IAAAA;AAIf,WAAOrM,GAAMQ,SAAS6L,EAAAA;EACtB,GAEDC,UAAAA,SAAStM,IAAAA;AAAAA,QAGHuM,IACAC;AAsCL,WAzCKnK,KAAK8H,oBAELoC,KAAO,CAAA,IACPC,KAAM,CAAV,GACIL,EAAAA,IAAa9J,MAEjBA,KAAK8H,kBAAkB,WAAA;AAAA,aAAMqC;IAAN,GAEvBnK,KAAKyH,wBAAwB,SAAU2C,IAAAA;AAClCpK,WAAKrC,MAAMyG,UAAUgG,GAAOhG,SAe/B8F,GAAKnG,KAAK,SAAAvD,IAAAA;AACTA,QAAAA,GAACtB,MAAAA,MACDqB,EAAcC,EAAAA;MACd,CAAA;IAEF,GAEDR,KAAKgH,MAAM,SAAAxG,IAAAA;AACV0J,MAAAA,GAAKxJ,KAAKF,EAAAA;AACV,UAAI6J,KAAM7J,GAAE+I;AACZ/I,MAAAA,GAAE+I,uBAAuB,WAAA;AACxBW,QAAAA,GAAKI,OAAOJ,GAAKlC,QAAQxH,EAAAA,GAAI,CAAA,GACzB6J,MAAKA,GAAI3L,KAAK8B,EAAAA;MAClB;IACD,IAGK7C,GAAMQ;EACb,EAAA;AASF,SAAQ4B,GAAQkK,SAAuBlK,KAAAA,GAAQgK,SAASpD,cACvD5G;AACD;ALvEYvC,IC2BAiB,GCjBPiB,GCRFH,GAgGSgL,GC+ET9J,GAWAG,GAEEE,GA0BAU,GCvNK5D,GLUEkF,GACAH,GACA2B,GCZAd;ADDAhG;;IAWAsF,IAAgC,CAAA;AAXhCtF,IAYAmF,IAAY,CAAA;AAZZnF,IAaA8G,IACZ;AAdY9G,ICCAgG,IAAUgH,MAAMhH;AA0BhB/E,QAAQkE,EAAUlE,OCjBzBiB,IAAU,EACfR,KSHM,SAAqBuL,IAAO3L,IAAOoC,IAAUwJ,IAAAA;AAQnD,eANI1J,IAEH2J,IAEAC,IAEO9L,KAAQA,GAAhBE;AACC,aAAKgC,KAAYlC,GAAHM,QAAAA,CAAyB4B,GAADhC;AACrC,cAAA;AAcC,iBAbA2L,KAAO3J,GAAU3B,gBAE4B,QAAjCsL,GAAKE,6BAChB7J,GAAU8J,SAASH,GAAKE,yBAAyBJ,EAAAA,CAAAA,GACjDG,KAAU5J,GAAH7B,MAG2B,QAA/B6B,GAAU+J,sBACb/J,GAAU+J,kBAAkBN,IAAOC,MAAa,CAAhD,CAAA,GACAE,KAAU5J,GACV7B,MAGGyL;AACH,qBAAQ5J,GAAS4F,MAAiB5F;UAInC,SAFQwE,IAAAA;AACRiF,YAAAA,KAAQjF;UACR;AAIH,YAAMiF;IACN,EAAA,GRxCGlL,IAAU,GAgGDgL,IAAiB,SAAAzL,IAAAA;AAC7BA,aAAS,QAATA,MAAsCkM,QAArBlM,GAAMO;IADW,GCxEnCS,EAAc+G,UAAUiE,WAAW,SAAUG,IAAQC,IAAAA;AAEpD,UAAIC;AAEHA,MAAAA,KADsB,QAAnBnL,KAAAoH,OAA2BpH,KAAAoH,QAAoBpH,KAAKiH,QACnDjH,KAAHoH,MAEGpH,KAAAoH,MAAkB3J,EAAO,CAAA,GAAIuC,KAAKiH,KAAAA,GAGlB,cAAA,OAAVgE,OAGVA,KAASA,GAAOxN,EAAO,CAAD,GAAK0N,EAAAA,GAAInL,KAAKrC,KAAAA,IAGjCsN,MACHxN,EAAO0N,IAAGF,EAAAA,GAIG,QAAVA,MAEAjL,KAAJV,QACK4L,MACHlL,KAAAmH,IAAqBzG,KAAKwK,EAAAA,GAE3B3K,EAAcP,IAAAA;IAEf,GAQDF,EAAc+G,UAAUuE,cAAc,SAAUF,IAAAA;AAC3ClL,WAAAA,QAIHA,KAAAd,MAAAA,MACIgM,MAAUlL,KAAAkH,IAAsBxG,KAAKwK,EAAAA,GACzC3K,EAAcP,IAAAA;IAEf,GAYDF,EAAc+G,UAAUC,SAASjH,GA8F7BY,IAAgB,CAAA,GAadK,IACa,cAAA,OAAXuK,UACJA,QAAQxE,UAAUyE,KAAKC,KAAKF,QAAQG,QAAAA,CAAAA,IACpCC,YAuBEjK,IAAY,SAACkK,IAAGC,IAAAA;AAAMD,aAAAA,GAAApM,IAAAL,MAAkB0M,GAA5BrM,IAAAL;IAAA,GAuBlB0B,EAAOkH,MAAkB,GC9OdjK,IAAI;;;;;;;;;;;;;;;;;;;;AO0Hf,SAASgO,GAAaC,IAAOC,IAAAA;AACxBC,IAAeC,OAClBD,EAAAC,IAAcC,IAAkBJ,IAAOK,MAAeJ,EAAAA,GAEvDI,KAAc;AAOd,MAAMC,KACLF,GAAgBG,QACfH,GAAgBG,MAAW,EAC3BC,IAAO,CAAA,GACPL,KAAiB,CAAA,EAAA;AAMnB,SAHIH,MAASM,GAAKE,GAAOC,UACxBH,GAAAE,GAAYE,KAAK,EAAEC,KAAeC,GAAAA,CAAAA,GAE5BN,GAAAA,GAAYN,EAAAA;AACnB;AAKM,SAASa,GAASC,IAAAA;AAExB,SADAT,KAAc,GACPU,GAAWC,IAAgBF,EAAAA;AAClC;AAQeC,SAAAA,GAAWE,IAASH,IAAcI,IAAAA;AAEjD,MAAMC,KAAYpB,GAAaqB,MAAgB,CAAA;AAE/C,MADAD,GAAUE,IAAWJ,IAAAA,CAChBE,GAALG,QACCH,GAAAX,KAAmB,CACjBU,KAAiDA,GAAKJ,EAAAA,IAA/CE,GAAAA,QAA0BF,EAAAA,GAElC,SAAAS,IAAAA;AACC,QAAMC,KAAeL,GAAAM,MAClBN,GAASM,IAAY,CAAA,IACrBN,GAASX,GAAQ,CAAA,GACdkB,KAAYP,GAAUE,EAASG,IAAcD,EAAAA;AAE/CC,IAAAA,OAAiBE,OACpBP,GAASM,MAAc,CAACC,IAAWP,GAASX,GAAQ,CAAA,CAAA,GACpDW,GAASG,IAAYK,SAAS,CAA9B,CAAA;EAED,CAAA,GAGFR,GAAAG,MAAuBlB,IAAAA,CAElBA,GAAiBwB,IAAkB;AAgC9BC,QAAAA,KAAT,SAAyBC,IAAGC,IAAGC,IAAAA;AAC9B,UAAA,CAAKb,GAADG,IAAAf;AAA+B,eAAA;AAEnC,UAAM0B,KAAad,GAASG,IAA0BY,IAAAA,GAAAA,OACrD,SAAAC,IAAAA;AAAKA,eAAAA,GAAJb;MAAA,CAAA;AAKF,UAHsBW,GAAWG,MAAM,SAAAD,IAAAA;AAAK,eAAA,CAACA,GAADV;MAAJ,CAAA;AAIvC,eAAA,CAAOY,MAAUA,GAAQC,KAAKC,MAAMT,IAAGC,IAAGC,EAAAA;AAM3C,UAAIQ,KAAAA;AAUJ,aATAP,GAAWQ,QAAQ,SAAAC,IAAAA;AAClB,YAAIA,GAAAA,KAAqB;AACxB,cAAMlB,KAAekB,GAAAA,GAAgB,CAAA;AACrCA,UAAAA,GAAQlC,KAAUkC,GAClBA,KAAAA,GAAAjB,MAAAA,QACID,OAAiBkB,GAAQlC,GAAQ,CAAA,MAAIgC,KAAAA;QACzC;MACD,CAAA,GAAA,EAAA,CAEMA,MAAgBrB,GAASG,IAAYqB,UAAUb,QAAAA,CACnDO,MACCA,GAAQC,KAAKC,MAAMT,IAAGC,IAAGC,EAAAA;IAG7B;AA9DD5B,IAAAA,GAAiBwB,IAAAA;AACjB,QAAIS,KAAUjC,GAAiBwC,uBACzBC,KAAUzC,GAAiB0C;AAKjC1C,IAAAA,GAAiB0C,sBAAsB,SAAUhB,IAAGC,IAAGC,IAAAA;AACtD,UAAIO,KAAaQ,KAAA;AAChB,YAAIC,KAAMX;AAEVA,QAAAA,KAAAA,QACAR,GAAgBC,IAAGC,IAAGC,EAAAA,GACtBK,KAAUW;MACV;AAEGH,MAAAA,MAASA,GAAQP,KAAKC,MAAMT,IAAGC,IAAGC,EAAAA;IACtC,GA+CD5B,GAAiBwC,wBAAwBf;EACzC;AAGF,SAAOV,GAAAM,OAAwBN,GAAxBX;AACP;AAMeyC,SAAAA,GAAUC,IAAUC,IAAAA;AAEnC,MAAMC,KAAQrD,GAAaqB,MAAgB,CAAA;AAAA,GACtClB,EAADmD,OAAyBC,GAAYF,GAAD7C,KAAc4C,EAAAA,MACrDC,GAAK5C,KAAU0C,IACfE,GAAMG,IAAeJ,IAErB/C,GAAAG,IAAAJ,IAAyCO,KAAK0C,EAAAA;AAE/C;AAMeI,SAAAA,GAAgBN,IAAUC,IAAAA;AAEzC,MAAMC,KAAQrD,GAAaqB,MAAgB,CAAA;AAAA,GACtClB,EAAAA,OAAwBoD,GAAYF,GAAD7C,KAAc4C,EAAAA,MACrDC,GAAK5C,KAAU0C,IACfE,GAAMG,IAAeJ,IAErB/C,GAAgBD,IAAkBO,KAAK0C,EAAAA;AAExC;AAEeK,SAAAA,GAAOC,IAAAA;AAEtB,SADArD,KAAc,GACPsD,GAAQ,WAAA;AAAO,WAAA,EAAEC,SAASF,GAAAA;EAAlB,GAAmC,CAAA,CAAA;AAClD;AAOM,SAASG,GAAoBC,IAAKC,IAAcZ,IAAAA;AACtD9C,EAAAA,KAAc,GACdmD,GACC,WAAA;AACC,WAAkB,cAAA,OAAPM,MACVA,GAAIC,GAAAA,CAAAA,GACG,WAAA;AAAA,aAAMD,GAAI,IAAA;IAAV,KACGA,MACVA,GAAIF,UAAUG,GAAAA,GACAD,WAAAA;AAAAA,aAAAA,GAAIF,UAAU;IAArB,KAAA;EAER,GACO,QAART,KAAeA,KAAOA,GAAKa,OAAOF,EAAAA,CAAAA;AAEnC;AAAA,SAMeH,GAAQM,IAASd,IAAAA;AAEhC,MAAMC,KAAQrD,GAAaqB,MAAgB,CAAA;AAC3C,SAAIkC,GAAYF,GAAaD,KAAAA,EAAAA,KAC5BC,GAAKzC,MAAiBsD,GAAAA,GACtBb,GAAMG,IAAeJ,IACrBC,GAAAjD,MAAiB8D,IACVb,GAAPzC,OAGMyC,GAAP5C;AACA;AAAA,SAMe0D,GAAYhB,IAAUC,IAAAA;AAErC,SADA9C,KAAc,GACPsD,GAAQ,WAAA;AAAA,WAAMT;EAAN,GAAgBC,EAAAA;AAC/B;AAKM,SAASgB,GAAWC,IAAAA;AAC1B,MAAMC,KAAWjE,GAAiBgE,QAAQA,GAAzB9C,GAAAA,GAKX8B,KAAQrD,GAAaqB,MAAgB,CAAA;AAK3C,SADAgC,GAAKpB,IAAYoC,IACZC,MAEe,QAAhBjB,GAAK5C,OACR4C,GAAK5C,KAAAA,MACL6D,GAASC,IAAIlE,EAAAA,IAEPiE,GAAS1B,MAAM4B,SANAH,GAEtB5D;AAKA;AAMegE,SAAAA,GAAcD,IAAOE,IAAAA;AAChCvE,IAAQsE,iBACXtE,EAAQsE,cAAcC,KAAYA,GAAUF,EAAAA,IAASA,EAAAA;AAEtD;AAKM,SAASG,GAAiBC,IAAAA;AAEhC,MAAMvB,KAAQrD,GAAaqB,MAAgB,EAAA,GACrCwD,KAAW/D,GAAAA;AAQjB,SAPAuC,GAAK5C,KAAUmE,IACVvE,GAAiByE,sBACrBzE,GAAiByE,oBAAoB,SAACC,IAAKC,IAAAA;AACtC3B,IAAAA,GAAcA,MAAAA,GAAA5C,GAAasE,IAAKC,EAAAA,GACpCH,GAAS,CAAA,EAAGE,EAAAA;EACZ,IAEK,CACNF,GAAS,CAAA,GACT,WAAA;AACCA,IAAAA,GAAS,CAAA,EAAA,MAAGI;EACZ,CAAA;AAEF;AAEM,SAASC,IAAAA;AACf,MAAM7B,KAAQrD,GAAaqB,MAAgB,EAAA;AAC3C,MAAA,CAAKgC,GAAD5C,IAAe;AAIlB,aADI0E,KAAO9E,GAAX+E,KACgB,SAATD,MAAAA,CAAkBA,GAADE,OAAgC,SAAjBF,GAAAA;AACtCA,MAAAA,KAAOA,GACP1E;AAED,QAAI6E,KAAOH,GAAAE,QAAeF,GAAIE,MAAS,CAAC,GAAG,CAAA;AAC3ChC,IAAAA,GAAK5C,KAAU,MAAM6E,GAAK,CAAA,IAAK,MAAMA,GAAK,CAAA;EAC1C;AAED,SAAOjC,GAAP5C;AACA;AAID,SAAS8E,KAAAA;AAER,WADIC,IACIA,KAAYC,GAAkBC,MAAAA;AACrC,QAAKF,GAAwBG,OAACH,GAA9BhF;AACA,UAAA;AACCgF,QAAAA,GAAAhF,IAAAJ,IAAkCsC,QAAQkD,EAAAA,GAC1CJ,GAAShF,IAAAA,IAAyBkC,QAAQmD,EAAAA,GAC1CL,GAAShF,IAAAA,MAA2B,CAAA;MAIpC,SAHQsF,IAAAA;AACRN,QAAAA,GAAAhF,IAAAJ,MAAoC,CAAA,GACpCD,EAAO6C,IAAa8C,IAAGN,GACvBJ,GAAAA;MAAA;AAEF;AAcD,SAASW,GAAe5C,IAAAA;AACvB,MAOI6C,IAPEC,KAAO,WAAA;AACZC,iBAAaC,EAAAA,GACTC,MAASC,qBAAqBL,EAAAA,GAClCM,WAAWnD,EAAAA;EACX,GACKgD,KAAUG,WAAWL,IAraR,GAAA;AAwafG,EAAAA,OACHJ,KAAMO,sBAAsBN,EAAAA;AAE7B;AAmBD,SAASL,GAAcY,IAAAA;AAGtB,MAAMC,KAAOpG,IACTqG,KAAUF,GAAdjF;AACsB,gBAAA,OAAXmF,OACVF,GAAAjF,MAAAA,QACAmF,GAAAA,IAGDrG,KAAmBoG;AACnB;AAMD,SAASZ,GAAaW,IAAAA;AAGrB,MAAMC,KAAOpG;AACbmG,EAAAA,GAAAjF,MAAgBiF,GAAI/F,GAAAA,GACpBJ,KAAmBoG;AACnB;AAMD,SAASlD,GAAYoD,IAASC,IAAAA;AAC7B,SAAA,CACED,MACDA,GAAQjG,WAAWkG,GAAQlG,UAC3BkG,GAAQC,KAAK,SAACC,IAAK7G,IAAAA;AAAU6G,WAAAA,OAAQH,GAAQ1G,EAAAA;EAAhC,CAAA;AAEd;AAED,SAASgB,GAAe6F,IAAKC,IAAAA;AAC5B,SAAmB,cAAA,OAALA,KAAkBA,GAAED,EAAAA,IAAOC;AACzC;IA3fG1F,IAGAhB,IAGA2G,IAiBAC,IAdA3G,IAGAmF,IAEA5E,IAEAqG,IACAC,IACAC,IACAC,IACAC,IAqZAlB;;;;AAzaJ,IASI9F,KAAc;AATlB,IAYImF,KAAoB,CAAA;AAZxB,IAcI5E,KAAQ,CAAA;AAdZ,IAgBIqG,KAAgB/G,EAApBoH;AAhBA,IAiBIJ,KAAkBhH,EAAtBqH;AAjBA,IAkBIJ,KAAejH,EAAQsH;AAlB3B,IAmBIJ,KAAYlH,EAAhBoB;AAnBA,IAoBI+F,KAAmBnH,EAAQuH;AAK/BvH,MAAOoH,MAAS,SAAAI,IAAAA;AACftH,MAAAA,KAAmB,MACf6G,MAAeA,GAAcS,EAAAA;IACjC,GAEDxH,EAAAqH,MAAkB,SAAAG,IAAAA;AACbR,MAAAA,MAAiBA,GAAgBQ,EAAAA,GAGrCtG,KAAe;AAEf,UAAMd,MAHNF,KAAmBsH,GAAnBpG,KAGWf;AACPD,MAAAA,OACCyG,OAAsB3G,MACzBE,GAAAA,MAAwB,CAAA,GACxBF,GAAAD,MAAoC,CAAA,GACpCG,GAAAE,GAAYiC,QAAQ,SAAAC,IAAAA;AACfA,QAAAA,GAAJjB,QACCiB,GAAAlC,KAAkBkC,GAAlBjB,MAEDiB,GAAAA,MAAyB9B,IACzB8B,GAAAjB,MAAsBiB,GAASa,IAAAA;MAC/B,CAAA,MAEDjD,GAAKH,IAAiBsC,QAAQkD,EAAAA,GAC9BrF,GAAAH,IAAsBsC,QAAQmD,EAAAA,GAC9BtF,GAAAH,MAAwB,CAAA,GACxBiB,KAAe,KAGjB2F,KAAoB3G;IACpB,GAEDF,EAAQsH,SAAS,SAAAE,IAAAA;AACZP,MAAAA,MAAcA,GAAaO,EAAAA;AAE/B,UAAM1F,KAAI0F,GAAHpG;AACHU,MAAAA,MAAKA,GAATzB,QACKyB,GAACzB,IAAyBE,IAAAA,WA4YR,MA5Y2B+E,GAAkB9E,KAAKsB,EAAAA,KA4Y7CgF,OAAY9G,EAAQoG,2BAC/CU,KAAU9G,EAAQoG,0BACNR,IAAgBR,EAAAA,IA7Y5BtD,GAACzB,IAAAA,GAAekC,QAAQ,SAAAC,IAAAA;AACnBA,QAAAA,GAASa,MACZb,GAAAnC,MAAiBmC,GAASa,IAEvBb,GAAAA,QAA2B9B,OAC9B8B,GAAQlC,KAAUkC,GAAlB/B,MAED+B,GAASa,IAAAA,QACTb,GAAQ/B,MAAiBC;MACzB,CAAA,IAEFmG,KAAoB3G,KAAmB;IACvC,GAEDF,EAAAoB,MAAkB,SAACoG,IAAOC,IAAAA;AACzBA,MAAAA,GAAYf,KAAK,SAAArB,IAAAA;AAChB,YAAA;AACCA,UAAAA,GAASpF,IAAkBsC,QAAQkD,EAAAA,GACnCJ,GAAAA,MAA6BA,GAAApF,IAA2B+B,OAAO,SAAAyC,IAAAA;AAAE,mBAAA,CAChEA,GAAAnE,MAAYoF,GAAajB,EAAAA;UADuC,CAAA;QASjE,SANQkB,IAAAA;AACR8B,UAAAA,GAAYf,KAAK,SAAA5E,IAAAA;AACZA,YAAAA,GAAoBA,QAAAA,GAAA7B,MAAqB,CAAA;UAC7C,CAAA,GACDwH,KAAc,CAAA,GACdzH,EAAO6C,IAAa8C,IAAGN,GACvBJ,GAAAA;QAAA;MACD,CAAA,GAEGiC,MAAWA,GAAUM,IAAOC,EAAAA;IAChC,GAEDzH,EAAQuH,UAAU,SAAAC,IAAAA;AACbL,MAAAA,MAAkBA,GAAiBK,EAAAA;AAEvC,UAEKE,IAFC5F,KAAI0F,GAAVpG;AACIU,MAAAA,MAAKA,GAATzB,QAECyB,GAACzB,IAAekC,GAAAA,QAAQ,SAAAV,IAAAA;AACvB,YAAA;AACC4D,UAAAA,GAAc5D,EAAAA;QAGd,SAFQ8D,IAAAA;AACR+B,UAAAA,KAAa/B;QACb;MACD,CAAA,GACD7D,GAACzB,MAAAA,QACGqH,MAAY1H,EAAA6C,IAAoB6E,IAAY5F,GAAhCmD,GAAAA;IAEjB;AAwTD,IAAIgB,KAA0C,cAAA,OAAzBG;;;",
  "names": ["MODE_HYDRATE", "assign", "obj", "props", "i", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "slice", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "constructor", "__v", "vnodeId", "__i", "__u", "options", "createRef", "current", "Fragment", "BaseComponent", "context", "this", "getDomSibling", "childIndex", "sibling", "updateParentDomPointers", "child", "base", "enqueueRender", "c", "rerenderQueue", "push", "process", "prevDebounce", "debounceRendering", "defer", "renderQueueLength", "component", "newVNode", "oldVNode", "oldDom", "parentDom", "commitQueue", "refQueue", "sort", "depthSort", "shift", "__P", "diff", "__n", "ownerSVGElement", "commitRoot", "diffChildren", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "isSvg", "excessDomChildren", "isHydrating", "childVNode", "newDom", "firstChildDom", "oldChildren", "EMPTY_ARR", "newChildrenLength", "constructNewChildrenArray", "EMPTY_OBJ", "applyRef", "insert", "nextSibling", "skewedIndex", "matchingIndex", "oldChildrenLength", "remainingOldChildren", "skew", "String", "isArray", "findMatchingIndex", "unmount", "parentVNode", "insertBefore", "toChildArray", "out", "some", "x", "y", "setStyle", "style", "value", "setProperty", "IS_NON_DIMENSIONAL", "test", "dom", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "l", "_attached", "Date", "now", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "eventHandler", "_dispatched", "event", "tmp", "isNew", "oldProps", "oldState", "snapshot", "clearProcessingException", "newProps", "provider", "componentContext", "renderHook", "count", "newType", "outer", "contextType", "__E", "prototype", "render", "doRender", "sub", "state", "__h", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "__r", "getChildContext", "getSnapshotBeforeUpdate", "indexOf", "diffElementNodes", "diffed", "root", "cb", "newHtml", "oldHtml", "newChildren", "inputValue", "checked", "nodeType", "localName", "document", "createTextNode", "createElementNS", "is", "data", "childNodes", "attributes", "__html", "innerHTML", "skipRemove", "r", "componentWillUnmount", "replaceNode", "firstChild", "hydrate", "cloneElement", "createContext", "defaultValue", "contextId", "Consumer", "contextValue", "Provider", "subs", "ctx", "_props", "old", "splice", "isValidElement", "Array", "error", "errorInfo", "ctor", "handled", "getDerivedStateFromError", "setState", "componentDidCatch", "undefined", "update", "callback", "s", "forceUpdate", "Promise", "then", "bind", "resolve", "setTimeout", "a", "b", "getHookState", "index", "type", "options", "__h", "currentComponent", "currentHook", "hooks", "__H", "__", "length", "push", "__V", "EMPTY", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "currentIndex", "_reducer", "__c", "action", "currentValue", "__N", "nextValue", "setState", "_hasScuFromHooks", "updateHookState", "p", "s", "c", "stateHooks", "filter", "x", "every", "prevScu", "call", "this", "shouldUpdate", "forEach", "hookItem", "props", "shouldComponentUpdate", "prevCWU", "componentWillUpdate", "__e", "tmp", "useEffect", "callback", "args", "state", "__s", "argsChanged", "_pendingArgs", "useLayoutEffect", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "value", "useDebugValue", "formatter", "useErrorBoundary", "cb", "errState", "componentDidCatch", "err", "errorInfo", "undefined", "useId", "root", "__v", "__m", "mask", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "__P", "invokeCleanup", "invokeEffect", "e", "afterNextFrame", "raf", "done", "clearTimeout", "timeout", "HAS_RAF", "cancelAnimationFrame", "setTimeout", "requestAnimationFrame", "hook", "comp", "cleanup", "oldArgs", "newArgs", "some", "arg", "f", "previousComponent", "prevRaf", "oldBeforeDiff", "oldBeforeRender", "oldAfterDiff", "oldCommit", "oldBeforeUnmount", "__b", "__r", "diffed", "unmount", "vnode", "commitQueue", "hasErrored"]
}
